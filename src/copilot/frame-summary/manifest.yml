# The manifest for the "frame-summary" service.
# Read the full specification for the "Backend Service" type at:
#  https://aws.github.io/copilot-cli/docs/manifest/backend-service/

# Your service name will be used in naming your resources like log groups, ECS services, etc.
name: frame-summary
type: Backend Service

# Your service does not allow any traffic.

# Configuration for your containers and service.
image:
  # Docker build arguments. For additional overrides: https://aws.github.io/copilot-cli/docs/manifest/backend-service/#image-build
  build:
    context: .
    dockerfile: model/Dockerfile

cpu: 1024 # Number of CPU units for the task.
memory: 8192 # Amount of memory in MiB used by the task.
platform: linux/x86_64 # See https://aws.github.io/copilot-cli/docs/manifest/backend-service/#platform
count: 4 # Number of tasks that should be running in your service.
exec: true # Enable running commands in your container.

variables:
  TOPIC_IN: chunked_vids
  S3_INPUT_DIR: processed-videos-visionai
  S3_OUTPUT_DIR: summarised-videos-visionai
  GROUP_ID: video_summarizers_dbg
  BOOTSTRAP_SERVERS: boot-38rpf9kk.c1.kafka-serverless.ca-central-1.amazonaws.com:9098
  TOPIC_OUT: summarised_vids
  ENDPOINT_NAME: huggingface-pytorch-tgi-inference-2025-09-19-01-51-18-150
  BUCKET: processed-videos-visionai

# storage:
# readonly_fs: true       # Limit to read-only access to mounted root filesystems.

# Optional fields for more advanced use-cases.
#
#variables:                    # Pass environment variables as key value pairs.
#  LOG_LEVEL: info

#secrets:                      # Pass secrets from AWS Systems Manager (SSM) Parameter Store.
#  GITHUB_TOKEN: GITHUB_TOKEN  # The key is the name of the environment variable, the value is the name of the SSM parameter.

# You can override any of the values defined above by environment.
environments:
  test:
    network:
      vpc:
        placement: "private" # The tasks will be placed on private subnets for the "test" environment.
#   test:
#     count: 2                # Number of tasks to run for the "test" environment.
#     deployment:           # The deployment strategy for the "test" environment.
#         rolling: 'recreate' # Stops existing tasks before new ones are started for faster deployments.
